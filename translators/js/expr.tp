name: "{{name}}"
const: &const "{{val}}"
Int: *const
Float: *const
Bool: "{{val|lower}}"
Str: "\"{{val}}\""

bin_op: "({{left()}} {{op}} {{right()}})"
un_op: "{{op}}{{el()}}"

callfunc: "{{name}}({{args|map(attribute='val')|join(', ')}})"
getattr: "{{obj()}}.{{attr_name}}"
callmethod: "{{obj()}}.{{attr_name}}({{', '.join(args)}})"
arg: "{{arg}}"

list: "[{{ls|map(attribute='val')|join(', ')}}]"
tuple: "[{{ls|join(', ')}}]"
dict: "{{'{'}}{%for i in key_val%}{{i.key()}}: {{i.val()}},{%endfor%}}"

index: |-
  {{obj()}}[{%-if val()[0] == '-'-%}
      {{obj()}}.length {{val()}}
  {%-elif is_const(val)-%}
      {{val()}}
  {%-else-%}
      Index({{val()}}, {{obj()}}.length){{ctx.use('Index')}}
  {%-endif-%}]
slice: "{{obj()}}.slice({{low()|default(0, true)}}, {{up()}})"

operations:
  "+": "+"
  "-": "-"
  "*": "*"
  "/": "/"
  "**": "**"
  "==": "=="
  "!=": "!="
  ">": ">"
  "<": "<"
  ">=": ">="
  "<=": "<="
  "or": "||"
  "and": "&&"
  "|": "|"
  "&": "&"
  "%": "%"
  "not": "!"
  "is": "==="
