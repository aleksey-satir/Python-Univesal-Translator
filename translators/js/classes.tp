_list: &list_class
  index:
    alt_name: 'indexOf'
    type: int

  append:
    alt_name: 'push'
    type: "None"

  '+':
    list:
      code: "{{l()}}.concat({{r()}})"
      type: "{{l.type}}"

  '*':
    type:
      code: "{{l()}}"
      type: "{'base_type':'list',  'el_type':'{{r()}}'}"
    int:
      code: '(function(e,n){a=[];for(i=0;i<n;i++){a=a.concat(e)}return a})({{l()}}, {{r()}})'
      type: '{{l.type}}'

_any: &any_class
  '//':
    any:
      code: "Math.floor({{l()}}/{{r()}})"
      type: int
  'in':
    list:
      code: "{{r()}}.includes({{l()}})"
      type: bool

_dom: &dom_class
  '<=':
    any:
      code: "{{l()}}.innerHTMl = {{r()}}"
      type: "None"
  '<<':
    any:
      code: "{{l()}}.innerHTMl += {{r()}}"
      type: "None"

classes:
  list: *list_class
  any: *any_class
  dom: *dom_class
  json:
    "__name__": "JSON"
    dumps:
      alt_name: "stringify"
    loads:
      alt_name: "parse"