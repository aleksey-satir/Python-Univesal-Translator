expr: "{{value()}};"
assign: "{{var()}} = {{value()}};"
new_var: "var {{var()}} = {{value()}};"

if: "if ({{condition()}}) {{body}} {{els}}"
elif: "else if ({{condition()}}) {{body}} {{els}}"
else: "else {{body}}"

func: "function {{name}} ({{args|map(attribute='val')|join(', ')}}) {{body}}"

return: "return {{value()}};"

while: "while ({{condition()}}) {{body}}"

for: >-
  for (var {{var()}} {{
  'in' if type(obj) == 'dict' else 'of'
  }} {{obj()}}) {{body}}

c_like_for: "for (var {{var()}} = {{start()}}; {{var()}} < {{finish()}}; {{var()}}+={{step()}}) {{body}}"

break: "break;"
continue: "continue;"

import: "const {{alias}} = require('{{module}}');"
body: |-
  {{'{'}}{%for st in body%}
  {{'    '*nl}}{{st}}{%endfor%}
  {{'    '*(nl-1)}}}