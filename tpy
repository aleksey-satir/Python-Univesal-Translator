#!/usr/bin/python3.9
import sys
import subprocess
from typing import List, Optional

import yaml
import typer
from jinja2 import Template

from transPYler import transpiler


yaml.warnings({'YAMLLoadWarning': False})

def main(
        _file: typer.FileText = typer.Argument(
            'index.py',
            help='Name of file for transpilation'
        ),
        tmpl: Optional[List[str]] = typer.Option(
            None,
            help='Names of template file(templates for js translators/js)'
        ),
        macr: Optional[List[str]] = typer.Option(
            [],
            help='Names of macros file(macros for js translators/js/macros.tp)'
        ),
        out: typer.FileTextWrite = typer.Option(
            sys.stdout,
            help='Output file'
        ),
):
    if not(tmpl):
        typer.echo('You must send at least one template file')
        raise typer.Abort()
    tr = transpiler(tmpl, macr)
    src = tr.compiler(_file.read())
    print(src, file=out)

if __name__ == '__main__':
     typer.run(main)
